<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    </head>
    <body>
        <div class="row">
            <h4>회원정보</h4>
        </div>
        <!-- 변경불가인건 프론트에서 변경불가라고 옆에 써줄 수 있음 -->
        <form name="myProfile-form">
            <input type="text" id="user_id" placeholder="아이디" readonly /><br />
            <input type="password" id="current-password" placeholder="현재 비밀번호" />
            <input type="password" id="new-password" placeholder="새 비밀번호" />
            <input type="password" id="confirm-new-password" placeholder="새 비밀번호 확인" />
            <input type="text" id="user_name" placeholder="이름" readonly /><br />
            <input type="number" id="user_age" placeholder="나이" readonly /><br />
            <input type="email" id="user_email" placeholder="이메일" /><br />
            <input type="text" id="user_gender" placeholder="성별" /><br />
            <input type="text" id="user_nick" placeholder="닉네임" /><br />
            <input type="text" id="sample4_postcode" placeholder="우편번호" />
            <input type="button" onclick="sample4_execDaumPostcode()" value="우편번호 찾기" /><br />
            <input type="text" id="sample4_roadAddress" placeholder="도로명주소" />
            <input type="text" id="sample4_jibunAddress" placeholder="지번주소" />
            <span id="guide" style="color: #999; display: none"></span><br />
            <input type="text" id="sample4_detailAddress" placeholder="상세주소" />
        </form>
        <button type="button" onclick="updateFunc()">수정</button>
        <button type="button" onclick="deleteFunc()">탈퇴</button>
    </body>
    <script>
        (async function () {
            const res = await axios({
                method: 'POST',
                url: '/api/user/info',
                headers: {
                    Authorization: `Bearer ${localStorage.getItem('token')}`,
                },
            });

            const {
                user_id,
                user_name,
                user_age,
                user_email,
                user_gender,
                user_nick,
                sample4_postcode,
                sample4_roadAddress,
                sample4_jibunAddress,
                sample4_detailAddress,
            } = res.data.result;

            document.querySelector('#user_id').value = user_id;
            document.querySelector('#user_name').value = user_name;
            document.querySelector('#user_age').value = user_age;
            document.querySelector('#user_email').value = user_email;
            document.querySelector('#user_gender').value = user_gender;
            document.querySelector('#user_nick').value = user_nick;
            document.querySelector('#sample4_postcode').value = sample4_postcode;
            document.querySelector('#sample4_roadAddress').value = sample4_roadAddress;
            document.querySelector('#sample4_jibunAddress').value = sample4_jibunAddress;
            document.querySelector('#sample4_detailAddress').value = sample4_detailAddress;
        })();

        async function updateFunc() {
            const userId = document.querySelector('#user_id').value;
            const currentPassword1 = document.querySelector('#current-password');
            const newPassword1 = document.querySelector('#new-password');
            const confirmNewPassword1 = document.querySelector('#confirm-new-password');
            const userName = document.querySelector('#user_name').value;
            const userAge = document.querySelector('#user_age').value;
            const userEmail = document.querySelector('#user_email').value;
            const userGender = document.querySelector('#user_gender').value;
            const userNick = document.querySelector('#user_nick').value;
            const postcode = document.querySelector('#sample4_postcode').value;
            const roadAddress = document.querySelector('#sample4_roadAddress').value;
            const jibunAddress = document.querySelector('#sample4_jibunAddress').value;
            const detailAddress = document.querySelector('#sample4_detailAddress').value;

            const currentPassword = currentPassword1.value;
            const newPassword = newPassword1.value;
            const confirmNewPassword = confirmNewPassword1.value;

            if (newPassword && newPassword !== confirmNewPassword) {
                alert('새 비밀번호가 일치하지 않습니다.');
                newPassword1.value = '';
                confirmNewPassword1.value = '';
                return;
            }

            try {
                const res = await axios({
                    method: 'PATCH',
                    url: '/api/user/update',
                    headers: {
                        Authorization: `Bearer ${localStorage.getItem('token')}`,
                    },
                    data: {
                        userId,
                        currentPassword,
                        newPassword,
                        userName,
                        userAge,
                        userEmail,
                        userGender,
                        userNick,
                        postcode,
                        roadAddress,
                        jibunAddress,
                        detailAddress,
                    },
                });
                if (!res.data.success) {
                    alert(res.data.message);
                    return;
                }
                alert('정보가 수정되었습니다.');
            } catch (error) {
                console.error(error);
                alert(error.response.data.message);
                currentPassword1.value = '';
                newPassword1.value = '';
                confirmNewPassword1.value = '';
            }
        }
        async function deleteFunc() {
            if (!confirm('탈퇴하시겠습니까?')) {
                return;
            }
            const res = await axios({
                method: 'DELETE',
                url: '/api/user/delete',
                headers: {
                    Authorization: `Bearer ${localStorage.getItem('token')}`,
                },
            });
            if (res.data.success) {
                alert('탈퇴 완료되었습니다');
                document.location.href = '/';
            }
        }
    </script>
</html>
