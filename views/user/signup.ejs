<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
        <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
    </head>
    <body>
        <div class="row">
            <h4>회원가입</h4>
        </div>
        <!-- 전화번호 값 추가해야함 -->
        <form name="signup-form">
            <input type="text" id="user_id" placeholder="아이디" required /><br />
            <input type="password" id="user_pw" placeholder="비밀번호" required /><br />
            <!-- 비밀번호 자동으로 틀린지 안틀린지 확인하는거 추가 -->
            <input type="password" id="check_pw" placeholder="비밀번호 확인" required /><br />
            <!-- <input type="button" value="비밀번호 검사" /><br /> -->
            <input type="text" id="user_name" placeholder="이름" required /><br />
            <input type="number" id="user_age" placeholder="나이" /><br />
            <input type="email" id="user_email" placeholder="이메일" /><br />
            <input type="text" id="user_gender" placeholder="성별" /><br />
            <input type="text" id="user_nick" placeholder="닉네임" /><br />
            <input type="text" id="sample4_postcode" placeholder="우편번호" />
            <input type="button" onclick="sample4_execDaumPostcode()" value="우편번호 찾기" /><br />
            <input type="text" id="sample4_roadAddress" placeholder="도로명주소" />
            <input type="text" id="sample4_jibunAddress" placeholder="지번주소" />
            <span id="guide" style="color: #999; display: none"></span><br />
            <input type="text" id="sample4_detailAddress" placeholder="상세주소" />
            <!-- <input type="text" id="sample4_extraAddress" placeholder="참고항목" /> -->
        </form>
        <!-- <div>
        </div> -->
        <button type="button" onclick="signupFunc()">회원가입</button>
        <script>
            async function signupFunc() {
                var pw1 = document.getElementById('user_pw').value;
                var pw2 = document.getElementById('check_pw').value;
                if (pw1 != pw2) {
                    alert('비밀번호가 일치 하지 않습니다');
                    return false;
                }

                const form = document.forms['signup-form'];
                const data = {
                    user_id: form.user_id.value,
                    user_pw: form.user_pw.value,
                    user_name: form.user_name.value,
                    user_age: form.user_age.value,
                    user_email: form.user_email.value,
                    user_gender: form.user_gender.value,
                    user_nick: form.user_nick.value,
                    sample4_postcode: form.sample4_postcode.value,
                    sample4_roadAddress: form.sample4_roadAddress.value,
                    sample4_jibunAddress: form.sample4_jibunAddress.value,
                    sample4_detailAddress: form.sample4_detailAddress.value,
                };
                // 입력값이 없는 경우 팝업 경고창을 띄우고 함수 종료
                for (const key in data) {
                    if (!data[key]) {
                        alert('입력값을 모두 채워주세요.');
                        return;
                    }
                }

                const res = await axios({
                    method: 'POST',
                    url: '/api/user/signup',
                    data,
                });
                console.log(res);
                if (res.data.success) {
                    alert('회원가입을 축하드립니다');
                    document.location.href = '/user/login';
                } else {
                    alert('이미 존재하는 아이디입니다');
                }
            }
        </script>
        <script>
            //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.
            function sample4_execDaumPostcode() {
                new daum.Postcode({
                    oncomplete: function (data) {
                        // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

                        // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
                        // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                        var roadAddr = data.roadAddress; // 도로명 주소 변수
                        var extraRoadAddr = ''; // 참고 항목 변수

                        // 법정동명이 있을 경우 추가한다. (법정리는 제외)
                        // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
                        if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {
                            extraRoadAddr += data.bname;
                        }
                        // 건물명이 있고, 공동주택일 경우 추가한다.
                        if (data.buildingName !== '' && data.apartment === 'Y') {
                            extraRoadAddr += extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName;
                        }
                        // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.
                        if (extraRoadAddr !== '') {
                            extraRoadAddr = ' (' + extraRoadAddr + ')';
                        }

                        // 우편번호와 주소 정보를 해당 필드에 넣는다.
                        document.getElementById('sample4_postcode').value = data.zonecode;
                        document.getElementById('sample4_roadAddress').value = roadAddr;
                        document.getElementById('sample4_jibunAddress').value = data.jibunAddress;

                        // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.
                        if (roadAddr !== '') {
                            document.getElementById('sample4_extraAddress').value = extraRoadAddr;
                        } else {
                            document.getElementById('sample4_extraAddress').value = '';
                        }

                        var guideTextBox = document.getElementById('guide');
                        // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
                        if (data.autoRoadAddress) {
                            var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
                            guideTextBox.innerHTML = '(예상 도로명 주소 : ' + expRoadAddr + ')';
                            guideTextBox.style.display = 'block';
                        } else if (data.autoJibunAddress) {
                            var expJibunAddr = data.autoJibunAddress;
                            guideTextBox.innerHTML = '(예상 지번 주소 : ' + expJibunAddr + ')';
                            guideTextBox.style.display = 'block';
                        } else {
                            guideTextBox.innerHTML = '';
                            guideTextBox.style.display = 'none';
                        }
                    },
                }).open();
            }
        </script>
    </body>
</html>
